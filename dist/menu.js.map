{"version":3,"sources":["menu.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","menu","document","querySelector","toggler","menuItems","querySelectorAll","menuBtn","menuItemsData","num","typed","Typed","strings","typeSpeed","backSpeed","loop","onclick","classList","toggle","window","addEventListener","event","add","contains","setTimeout","remove","children","console","log","innerWidth","forEach","href","attributes","textContent","menuTitle","replace","filter","child","element"],"mappings":"AAAA,aAEA,SAASA,mBAAmBC,GAAO,OAAOC,mBAAmBD,IAAQE,iBAAiBF,IAAQG,4BAA4BH,IAAQI,oBAAsB,CACxJ,SAASA,qBAAuB,MAAM,IAAIC,UAAU,uIAAyI,CAC7L,SAASF,4BAA4BG,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOE,kBAAkBF,EAAGC,GAAS,IAAIE,EAAIC,OAAOC,UAAUC,SAASC,KAAKP,GAAGQ,MAAM,GAAI,GAAiE,MAAnD,WAANL,GAAkBH,EAAES,cAAaN,EAAIH,EAAES,YAAYC,MAAgB,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKZ,GAAc,cAANG,GAAqB,2CAA2CU,KAAKV,GAAWD,kBAAkBF,EAAGC,QAAzG,CAA7O,CAA+V,CAC/Z,SAASL,iBAAiBkB,GAAQ,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMC,KAAKE,EAAO,CAC7J,SAASnB,mBAAmBD,GAAO,GAAIiB,MAAMM,QAAQvB,GAAM,OAAOQ,kBAAkBR,EAAM,CAC1F,SAASQ,kBAAkBR,EAAKwB,IAAkB,MAAPA,GAAeA,EAAMxB,EAAIyB,UAAQD,EAAMxB,EAAIyB,QAAQ,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIV,MAAMO,GAAME,EAAIF,EAAKE,IAAKC,EAAKD,GAAK1B,EAAI0B,GAAI,OAAOC,CAAM,CAPlL,IAAMC,KAAOC,SAASC,cAAc,SAC9BC,QAAUF,SAASC,cAAc,uBACjCE,UAAYH,SAASI,iBAAiB,qBACtCC,QAAUL,SAASC,cAAc,YAEjCK,cAAgB,CAAC,WAAY,WAAY,SAAS,eAAe,aAAc,QACjFC,IAAM,EAINC,MAAQ,IAAIC,MAAM,aAAc,CAChCC,QAAS,CAAC,WAAW,WAAY,WACjCC,UAAW,IACXC,UAAW,IACXC,MAAM,IAGVX,QAAQY,QAAU,WAEdf,KAAKgB,UAAUC,OAAO,SAC1B,EAIAC,OAAOC,iBAAiB,QAAQ,SAASC,GACrCpB,KAAKgB,UAAUK,IAAI,UAChBrB,KAAKgB,UAAUM,SAAS,WACvBC,YAAY,WACRjB,QAAQU,UAAUQ,OAAO,aACzBpB,UAAU,GAAGqB,SAAS,GAAGT,UAAUK,IAAI,SAC3C,GAAG,IAEX,IAEAH,OAAOC,iBAAiB,UAAU,WAM9BO,QAAQC,IAAI,SAAUT,OAAOU,WACjC,IAMExB,UAAUyB,SAAS,SAAA7B,GACjBA,EAAKmB,iBAAiB,aAAa,WAC/B,IAAIW,EAAO9B,EAAKyB,SAAS,GAAGM,WAAWD,KAAKE,YACxCC,EAAYH,EAAK5C,MAAM,GAAGgD,QAAQ,IAAK,KAC3C5B,QAAQ0B,YAAcC,EACtB3B,QAAQwB,KAAOA,EACf9B,EAAKyB,SAAS,GAAGT,UAAUK,IAAI,UACZlD,mBAAIiC,WAAW+B,QAAO,SAAAC,GAAK,OAAIA,GAASpC,CAAI,IAClD6B,SAAQ,SAAAQ,GAAaA,EAAQZ,SAAS,GAAGT,UAAUQ,OAAO,SAAU,GACrF,GACF,IAEAlB,QAAQa,iBAAiB,SAAS,WAAQnB,KAAKgB,UAAUQ,OAAO,SAAW","file":"menu.js","sourcesContent":["const menu = document.querySelector(\".menu\");\r\nconst toggler = document.querySelector(\".menu--hero__toggle\");\r\nconst menuItems = document.querySelectorAll(\".menu--hero__icon\");\r\nconst menuBtn = document.querySelector(\"#menuBtn\");\r\n\r\nconst menuItemsData = [\"About Me\", \"Projects\", \"Skills\",\"Testimonials\",\"Contact Me\", \"Home\"];\r\nlet num = 0;\r\n\r\n\r\n// This function is for typing text effects\r\nlet typed = new Typed(\"#auto-type\", {\r\n    strings: [\"analyze.\",\"develop.\", \"deploy.\"],\r\n    typeSpeed: 100,\r\n    backSpeed: 100,\r\n    loop: true\r\n});\r\n\r\ntoggler.onclick = () => {\r\n    // console.log(\"clicked\");\r\n    menu.classList.toggle(\"active\");\r\n};\r\n\r\n\r\n// Animate Circular Menu when the page was loaded\r\nwindow.addEventListener(\"load\", function(event){\r\n    menu.classList.add(\"active\");\r\n    if(menu.classList.contains(\"active\")){\r\n        setTimeout( () => {\r\n            menuBtn.classList.remove(\"display-n\");\r\n            menuItems[0].children[0].classList.add(\"active\");\r\n        }, 1000) \r\n    }\r\n});\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    // if (window.innerWidth > 500) {\r\n    //     navbar.classList.remove(\"nav--open-menu\");\r\n    //     overlay.classList.remove(\"overlay\");\r\n    // }\r\n\r\n    console.log(\"resize\", window.innerWidth)\r\n})\r\n\r\n  \r\n\r\n\r\n\r\n  menuItems.forEach( menu => {\r\n    menu.addEventListener(\"mouseover\", ()=> {\r\n        let href = menu.children[0].attributes.href.textContent;\r\n        let menuTitle = href.slice(1).replace(\"-\", \" \");\r\n        menuBtn.textContent = menuTitle;\r\n        menuBtn.href = href;\r\n        menu.children[0].classList.add(\"active\");\r\n        let siblingLinks = [...menuItems].filter(child => child != menu);\r\n        siblingLinks.forEach(element => { element.children[0].classList.remove(\"active\") });\r\n    });\r\n  });\r\n\r\n  menuBtn.addEventListener(\"click\", () => { menu.classList.remove(\"active\"); })\r\n\r\n"]}